/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n    mutation createWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $picture: String) {\n      createWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, picture: $picture) {\n        firstName\n        lastName\n        description\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  ": types.CreateWilderDocument,
    "\n    mutation deleteWilder($deleteWilderId: String!) {\n      deleteWilder(id: $deleteWilderId) {\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  ": types.DeleteWilderDocument,
    "\n    query getWilders {\n      wilders {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n          id\n        }\n        skills {\n          skillName\n          id\n        }\n      }\n    }\n  ": types.GetWildersDocument,
    "\n    query wilder($wilderId: String!) {\n      wilder(id: $wilderId) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  ": types.WilderDocument,
    "\n    mutation updateWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $updateWilderId: ID!, $picture: String) {\n      updateWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, id: $updateWilderId, picture: $picture) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  ": types.UpdateWilderDocument,
};

export function graphql(source: "\n    mutation createWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $picture: String) {\n      createWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, picture: $picture) {\n        firstName\n        lastName\n        description\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  "): (typeof documents)["\n    mutation createWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $picture: String) {\n      createWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, picture: $picture) {\n        firstName\n        lastName\n        description\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  "];
export function graphql(source: "\n    mutation deleteWilder($deleteWilderId: String!) {\n      deleteWilder(id: $deleteWilderId) {\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  "): (typeof documents)["\n    mutation deleteWilder($deleteWilderId: String!) {\n      deleteWilder(id: $deleteWilderId) {\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n    }\n  "];
export function graphql(source: "\n    query getWilders {\n      wilders {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n          id\n        }\n        skills {\n          skillName\n          id\n        }\n      }\n    }\n  "): (typeof documents)["\n    query getWilders {\n      wilders {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n          id\n        }\n        skills {\n          skillName\n          id\n        }\n      }\n    }\n  "];
export function graphql(source: "\n    query wilder($wilderId: String!) {\n      wilder(id: $wilderId) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  "): (typeof documents)["\n    query wilder($wilderId: String!) {\n      wilder(id: $wilderId) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  "];
export function graphql(source: "\n    mutation updateWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $updateWilderId: ID!, $picture: String) {\n      updateWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, id: $updateWilderId, picture: $picture) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  "): (typeof documents)["\n    mutation updateWilder($firstName: String!, $lastName: String!, $description: String!, $isTeacher: Boolean!, $schoolName: String!, $skills: [String!]!, $updateWilderId: ID!, $picture: String) {\n      updateWilder(firstName: $firstName, lastName: $lastName, description: $description, isTeacher: $isTeacher, schoolName: $schoolName, skills: $skills, id: $updateWilderId, picture: $picture) {\n        id\n        firstName\n        lastName\n        description\n        picture\n        isTeacher\n        school {\n          schoolName\n        }\n        skills {\n          skillName\n        }\n      }\n  }\n  "];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;